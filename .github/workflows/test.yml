name: Run Tests and Build Docker Image

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Restore dependencies
      run: dotnet restore src/mssqlclient.sln
    
    - name: Build
      run: dotnet build src/mssqlclient.sln --no-restore
    
    - name: Test
      run: dotnet test src/mssqlclient.sln --no-build --verbosity normal
  
  docker-build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      working-directory: src
      run: |
        # Build the image but don't push it
        docker build -f Core.Infrastructure.McpServer/Dockerfile \
          --build-arg BUILD_CONFIGURATION=Release \
          -t mssqlclient-mcp-server:test \
          .
    
    - name: Test Docker image
      run: |
        # Run the container and capture logs - we expect it to exit since MCP servers exit without input
        echo "Running container..."
        container_id=$(docker run --name test-container -d mssqlclient-mcp-server:test)
        
        # Wait a few seconds for logs to be generated
        sleep 3
        
        # Capture logs
        echo "Container logs:"
        docker logs test-container
        
        # Check logs for expected startup messages
        if docker logs test-container 2>&1 | grep -q "Starting MCP MSSQLClient Server" && \
           docker logs test-container 2>&1 | grep -q "MSSQL_CONNECTIONSTRING is not set in appsettings.json or environment variables."; then
          echo "✅ Container started successfully with expected log messages"
        else
          echo "❌ Container did not show expected startup messages"
          exit 1
        fi
        
        # Clean up regardless of container state
        docker rm -f test-container || true
        
        echo "Test completed successfully"
